x<-4
class(x)
x <- c(4, TRUE)
class(x)
x <- c(4, TRUE)
class(x)
B <- c(4, TRUE)
class(B)
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x>10]==4
x[x>10]<-4
x
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
View(hw1_data)
head(hx1_data,n=2)
head(hx1_data)
head(hw1_data,n=2)
tail(hw1_data,n=2)
hw1_data[47]
hw1_data[,47]
hw1_data[47,]
table(hw1_data$Ozone)
hw1_data$Ozone==NA
hw1_data$Ozone
summary(hw1_data$Ozone)
summary(hw1_data$Ozone,na.omit=TRUE)
sub=subset(hw1_data$Ozone>31,Temp>90)
sub=subset(hw1_data$Ozone>31,hw1_data$Temp>90)
summary(sub$Ozone)
sub
sub=data.frame(hw1_data$Ozone>31,hw1_data$Temp>90)
sub
sub=subset(hw1_data,hw1_data$Ozone>31,hw1_data$Temp>90)
sub=subset(hw1_data,hw1_data$Ozone>31 & hw1_data$Temp>90)
sub
summary(sub$Ozone)
summary(sub$Solar.R)
sub2=subset(hw1_data,hw1_data$Month=6)
sub2=subset(hw1_data,hw1_data$Month==6)
summary(sub2$Temp)
sub2=subset(hw1_data,hw1_data$Month==5)
summary(sub2$Ozone)
above <- function(x,n) {
use x>n
x[use]
}
above <- function(x,n){
use x>n
x[use]
}
above <- function(x,n){
use x>n
x[use]
above <- function(x,n){
use <- x>n
x[use]
}
above(19,2)
a<-c(12,34,5,6,1,3,1,2,1,1,1,0)
above(a,5)
above <- function(x,n=10){#podemos poner como default a un numero, en caso de no especificar cual usar
use <- x>n
x[use]
}
above(a)
clumnmean <- function(x, removeNA=TRUE){ #funcion que saca los means de las columnas de una matriz o data frame
nc<-ncol(x)
means<- numeric(nc)
for (i in 1:nc){
means[i]<- mean(x[,i], na.rm=removeNA) #le ponemos por default que quite los NAs
}
means #el utlimo comando es el que va a imprimir
}
columnmean(rwage78)
columnmean <- function(x, removeNA=TRUE){ #funcion que saca los means de las columnas de una matriz o data frame
nc<-ncol(x)
means<- numeric(nc)
for (i in 1:nc){
means[i]<- mean(x[,i], na.rm=removeNA) #le ponemos por default que quite los NAs
}
means #el utlimo comando es el que va a imprimir
}
columnmean(rwage78)
columnmean(airquailty)
columnmean(Base)
columnmean(A)
x<-1:10
if(x>5){x<-0}
f<-function(x){
g<-function(y){
y+z
}
z<-4
x+g(x)
}
f(3)
z=10
f(3)
makeCacheMatrix <- function(x = matrix()) {
inv<-NULL
set<-function (y){
x<<-y
inv<<-NULL
}
get<-funtion()x
setinverse<-function(inverse) inv<<-inverse
getinverse<-function() inv
list(set=set, get=get, setinverse=setinverse, getinverse=getinverse
}
makeCacheMatrix <- function(x = matrix()) {
inv<-NULL
set<-function (y){
x<<-y
inv<<-NULL
}
get<-funtion()x
setinverse<-function(inverse) inv<<-inverse
getinverse<-function() inv
list(set=set, get=get, setinverse=setinverse, getinverse=getinverse)
}
makeCacheMatrix <- function(x = matrix()) {
inv<-NULL
set<-function (y){
x<<-y
inv<<-NULL
}
get<-funtion()x
setinverse<-function(inverse) inv<<-inverse
getinverse<-function() inv
list(set=set, get=get, setinverse=setinverse, getinverse=getinverse)
}
makeCacheMatrix <- function(x = matrix()) {
inv<-NULL
set<-function (y){
x<<-y
inv<<-NULL
}
get<-function()x
setinverse<-function(inverse) inv<<-inverse
getinverse<-function() inv
list(set=set, get=get, setinverse=setinverse, getinverse=getinverse)
}
makeCacheMatrix <- function(x = matrix()) {
invm<-NULL
set<-function (y){
x<<-y
invm<<-NULL
}
get<-function()x
setinverse<-function(inverse) invm<<-inverse
getinverse<-function() invm
list(set=set, get=get, setinverse=setinverse, getinverse=getinverse)
}
cacheSolve <- function(x, ...) {
invm<-x$getinverse()
if(!is.null(invm)){
message("getting cached data")
return(invm)
}
data<-x$get()
inv<-solve(data)
x$setinverse(invm)
invm
}
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(m)
m$get()
cacheSolve(m)
cacheSolve(m)
get(x)
get(m)
m$get()
m = makeCacheMatrix(x)
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
x = rbind(c(1, 1/4), c(1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
makeCacheMatrix <- function(x = matrix()) {
inv<-NULL
set<-function (y){
x<<-y
inv<<-NULL
}
get<-function()x
setinverse<-function(inverse) inv<<-inverse
getinverse<-function() inv
list(set=set, get=get, setinverse=setinverse, getinverse=getinverse)
}
cacheSolve <- function(x, ...) {
inv<-x$getinverse()
if(!is.null(inv)){
message("getting cached data")
return(inv)
}
data<-x$get()
inv<-solve(data)
x$setinverse(inv)
inv
}
x = rbind(c(1, 1/4), c(1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve <- function(x, ...) {
invm<-x$getinverse()
if(!is.null(invm)){
message("getting cached data")
return(invm)
}
data<-x$get()
invm<-solve(data)
x$setinverse(invm)
invm
}
makeCacheMatrix <- function(x = matrix()) {
invm<-NULL
set<-function (y){
x<<-y
invm<<-NULL
}
get<-function()x
setinverse<-function(inverse) invm<<-inverse
getinverse<-function() invm
list(set=set, get=get, setinverse=setinverse, getinverse=getinverse)
}
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(m)
library(datasets)
data(iris)
?iris
mean(iris)
class(iris)
View(iris)
iris<-(iris$species="virginica")
Vire(iris)
View(iris)
data(iris)
View(iris)
iris<-iris[species="virginica"]
View(iris)
iris<-iris[Species="virginica"]
iris[Species="virginica"]
iris[Species=="virginica"]
iris$Species
iris1<-subset(iris, Species=virginica)
View(iris1)
iris1<-subset(iris, Species="virginica")
View(iris1)
iris1<-subset(iris, Species=="virginica")
View(iris1)
mean(iris1$Sepal.Length)
apply(iris[,1:4],2,mean)
data(mtcars)
View(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mtcars4<-subset(mtcars,cyl=4)
View(mtcars4)
mtcars4<-subset(mtcars,cyl==4)
View(mtcars4)
mtcars8<-subset(mtcars,cyl==8)
abs(-5)
abs(mean(mtcars4$hp)-mean(mtcars8$hp))
mean(mtcars4$hp)
mean(mtcars8$hp)
View(mtcars8)
debug(ls)
ls
debug(mean)
mean
mean(mtcars$hp)
read.table(dataFile,header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
dataFile <- "/Users/serranomario/Downloads/household_power_consumption.txt"
read.table(dataFile,header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
dataFile <- "/Users/serranomario/Downloads/household_power_consumption.txt"
data<-read.table(dataFile,header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
View(data)
datasub<-subset(data,data$Date=c(1/2/2007,2/2/2007))
datasub<-subset(data,data$Date==c(1/2/2007,2/2/2007))
datasub<-data[data$Date %in% c("1/2/2007","2/2/2007"),]
View(datasub)
datasub<-(data[data$Date %in% c("1/2/2007","2/2/2007"),],row.names=FALSE)
datasub<-data[data$Date %in% c("1/2/2007","2/2/2007"),]
View(datasub)
getwd()
setwd("~/Dropbox/COURSERA/R/ExData_Plotting1-master")
setwd("~/Dropbox/COURSERA/R/ExData_Plotting1-master")
hist(datasub$Global_active_power)
hist(as.numeric(datasub$Global_active_power))
hist(as.numeric(datasub$Global_active_power),col="red")
hist(as.numeric(datasub$Global_active_power),col="red",main="Global Active Power")
hist(as.numeric(datasub$Global_active_power),col="red",main="Global Active Power",xlab="Global Active Power (kilowats)")
png("plot1.png", width=480, height=480)
dev.off()
png("plot1.png", width=480, height=480)
hist(as.numeric(datasub$Global_active_power),col="red",main="Global Active Power",
xlab="Global Active Power (kilowats)")
dev.off()
png("plot2.png", width=480, height=480)
names(datasub)
plot(datasub$Date,as.numeric(datasub$Global_active_power))
days<-strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
datasub$Time
days<-strptime(paste(datasub$Date, datasub$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(days,as.numeric(datasub$Global_active_power))
dev.on()
dev.off()
dev.new()
plot(days,as.numeric(datasub$Global_active_power))
plot(days,as.numeric(datasub$Global_active_power),type="l")
png("plot1.png", width=480, height=480)
hist(as.numeric(datasub$Global_active_power),col="red",main="Global Active Power",
xlab="Global Active Power (kilowatts)")
dev.off()
png("plot1.png", width=480, height=480)
hist(as.numeric(datasub$Global_active_power),col="red",main="Global Active Power",
xlab="Global Active Power (kilowatts)")
dev.off()
days<-strptime(paste(datasub$Date, datasub$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
png("plot2.png", width=480, height=480)
plot(days,as.numeric(datasub$Global_active_power),type="l", ylab="Global Active Power (kilowatts)")
dev.new()
plot(days,as.numeric(datasub$Global_active_power),type="l", ylab="Global Active Power (kilowatts)")
plot(days,as.numeric(datasub$Global_active_power),type="l", ylab="Global Active Power (kilowatts)",xlab="")
dev.off()
dev.new
dev.new()
days<-strptime(paste(datasub$Date, datasub$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
png("plot3.png", width=480, height=480)
names(datasub)
plot(days,datasub$Sub_metering_3)
dev.new()
plot(days,datasub$Sub_metering_3)
plot(days,datasub$Sub_metering_3,type="l")
names(datasub)
lines(days,datasub$Sub_metering_1)
lines(days,datasub$Sub_metering_2)
plot(days,datasub$Sub_metering_1,type="l")
lines(days,datasub$Sub_metering_2)
lines(days,datasub$Sub_metering_3)
lines(days,datasub$Sub_metering_2,type="l")
lines(days,datasub$Sub_metering_3,type="l")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend(topright)
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ",legend(topright))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1, col=c("black", "red", "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2, col=c("black", "red", "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"))
2
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2, col=c("black", "red", "blue"))
dev.off()
png("plot3.png", width=480, height=480)
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2, col=c("black", "red", "blue"))
dev.off()
dev.new()
png("plot4.png", width=480, height=480)
par(mfrow = c(2, 2))
plot(days, as.numeric(datasub$Global_active_power))
dev.new()
plot(days, as.numeric(datasub$Global_active_power))
dev.off()
dev.off()
dev.off()
dev.off()
dev.new()
plot(days, as.numeric(datasub$Global_active_power))
plot(days, as.numeric(datasub$Global_active_power),type="l")
plot(days, as.numeric(datasub$Global_active_power),type="l",ylab="Global Active Power",xlab=" ")
names(datasub)
plot(days,datasub$Voltage)
par(mfrow = c(2, 2))
plot(days, as.numeric(datasub$Global_active_power),type="l",ylab="Global Active Power",xlab=" ")
plot(days,datasub$Voltage)
plot(days,datasub$Voltage,type="l")
par(mfrow = c(2, 2))
plot(days, as.numeric(datasub$Global_active_power),type="l",ylab="Global Active Power",xlab=" ")
plot(days,datasub$Voltage,type="l")
par(mfrow = c(2, 2))
plot(days, as.numeric(datasub$Global_active_power),type="l",ylab="Global Active Power",xlab=" ")
plot(days,datasub$Voltage,type="l",ylab="Voltage",xlab="datetime")
par(mfrow = c(2, 2))
plot(days, as.numeric(datasub$Global_active_power),type="l",ylab="Global Active Power",xlab=" ")
plot(days,datasub$Voltage,type="l",ylab="Voltage",xlab="datetime")
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"))
plot(days,datasub$Global_reactive_power)
plot(days,datasub$Global_reactive_power,type="l")
plot(days,datasub$Global_reactive_power,type="l",ylab="Global_reactive_power",xlab="datetime")
par(mfrow = c(2, 2))
plot(days, as.numeric(datasub$Global_active_power),type="l",ylab="Global Active Power",xlab=" ")
plot(days,datasub$Voltage,type="l",ylab="Voltage",xlab="datetime")
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"))
plot(days,datasub$Global_reactive_power,type="l",ylab="Global_reactive_power",xlab="datetime")
plot(days, as.numeric(datasub$Global_active_power),type="l",ylab="Global Active Power",xlab=" ")
plot(days,datasub$Voltage,type="l",ylab="Voltage",xlab="datetime")
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"),cex="0.25")
plot(days,datasub$Global_reactive_power,type="l",ylab="Global_reactive_power",xlab="datetime")
par(mfrow = c(2, 2))
plot(days, as.numeric(datasub$Global_active_power),type="l",ylab="Global Active Power",xlab=" ")
plot(days,datasub$Voltage,type="l",ylab="Voltage",xlab="datetime")
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"),cex=0.25)
plot(days,datasub$Global_reactive_power,type="l",ylab="Global_reactive_power",xlab="datetime")
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"),cex=0.5)
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"),cex=0.4)
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"),cex=0.3)
par(mfrow = c(2, 2))
plot(days, as.numeric(datasub$Global_active_power),type="l",ylab="Global Active Power",xlab=" ")
plot(days,datasub$Voltage,type="l",ylab="Voltage",xlab="datetime")
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"),cex=0.3)
plot(days,datasub$Global_reactive_power,type="l",ylab="Global_reactive_power",xlab="datetime")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"),bty="o")
plot(days, as.numeric(datasub$Global_active_power),type="l",ylab="Global Active Power",xlab=" ")
plot(days,datasub$Voltage,type="l",ylab="Voltage",xlab="datetime")
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"),bty="o")
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, lwd=2.5,
col=c("black", "red", "blue"),bty="o")
par(mfrow = c(2, 2))
plot(days, as.numeric(datasub$Global_active_power),type="l",ylab="Global Active Power",xlab=" ")
plot(days,datasub$Voltage,type="l",ylab="Voltage",xlab="datetime")
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, lwd=2.5,
col=c("black", "red", "blue"),bty="o")
plot(days,datasub$Global_reactive_power,type="l",ylab="Global_reactive_power",xlab="datetime")
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"),cex=0.5)
col=c("black", "red", "blue"),cex.box=0.5)
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"),cex.box=0.5)
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"),bty="o")
par(mfrow = c(2, 2))
plot(days, as.numeric(datasub$Global_active_power),type="l",ylab="Global Active Power",xlab=" ")
plot(days,datasub$Voltage,type="l",ylab="Voltage",xlab="datetime")
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"),bty="o")
plot(days,datasub$Global_reactive_power,type="l",ylab="Global_reactive_power",xlab="datetime")
dev.off()
png("plot4.png", width=480, height=480)
par(mfrow = c(2, 2))
plot(days, as.numeric(datasub$Global_active_power),type="l",ylab="Global Active Power",xlab=" ")
plot(days,datasub$Voltage,type="l",ylab="Voltage",xlab="datetime")
plot(days,datasub$Sub_metering_1,type="l",ylab="Energy sub metering",xlab=" ")
lines(days,datasub$Sub_metering_2,type="l",col="red")
lines(days,datasub$Sub_metering_3,type="l",col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=2,
col=c("black", "red", "blue"),bty="o")
plot(days,datasub$Global_reactive_power,type="l",ylab="Global_reactive_power",xlab="datetime")
dev.off()
